#include "main.h"
#include <stdarg.h>
#include <unistd.h>
#include <string.h>

/**
 * _printf - Produces output according to a format.
 * @format: The format string containing directives.
 *
 * Return: The number of characters printed (excluding the null byte).
 */
int _printf(const char *format, ...)
{
	va_list args;
	int count = 0;

	if (format == NULL)
		return (-1);

	va_start(args, format);

	while (*format)
	{
		if (*format == '%' && *(format + 1) != '\0')
		{
			format++; /* Move past '%' */
			switch (*format)
			{
			case 'c':
				count += write(1, &va_arg(args, int), 1);
				break;
			case 's':
				count += write(1, va_arg(args, char *), _strlen(va_arg(args, char*)));
				break;
			case '%':
				count += write(1, "%", 1);
				break;
			case 'd':
			case 'i':
				count += print_int(va_arg(args, int));
				break;
			default:
				count += write(1, "%", 1);
				count += write(1, format, 1);
			}
		}
		else
		{
			count += write(1, format, 1);
		}
		format++;
	}

	va_end(args);

	return (count);
}
